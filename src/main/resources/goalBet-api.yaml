openapi: 3.0.0

info:
  title: Goal Bet API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.0.1

paths:
  /info:
    get:
      summary: Return the info.
      operationId: getInfo
      responses:
        '200':
          description: return the info
          content:
            application/json:
              schema: 
                type: string
  /getUserDetails:
    get:
      summary: Returns a list of users data.
      operationId: getUserDetails
      responses:
        '200':
          description: A JSON array of user data
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/UserData'
  /predictGoal:
    post:
      summary: Add goal
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PredictionDetails'
      responses:
        '200':
          description: A JSON array of user data
          content:
            application/json:
              schema: 
                type: string
  /calculateScore:
    get:
      summary: Calculate match scores.
      operationId: calculateScore
      parameters:
        - in: query
          name: matchId
          schema:
            type: string
        - in: query
          name: team1
          schema:
            type: integer
        - in: query
          name: team2
          schema:
            type: integer
      responses:
        '200':
          description: A JSON array of user data
          content:
            application/json:
              schema: 
                type: string
            
  /getPredictions:
    get:
      summary: Returns a list of predictions.
      operationId: getPredictions
      responses:
        '200':
          description: get Predictions
          content:
            application/json:
              schema: 
                type: string
                
  /getNextMatchDetails:
    get:
      summary: returns Next Match Details
      operationId: getNextMatchDetails
      responses:
        '200':
          description: get Next Match Details
          content:
            application/json:
              schema: 
                type: string
                  
components:
  schemas:
  
    PredictionDetails:
      properties:
        matchId:
          type: string
        userId:
          type: string
        teamGoals1:
          type: integer          
        teamGoals2:
          type: integer 
          
    MatchDetails:
      properties:
        matchId:
          type: string
        team1:
          type: integer          
        team2:
          type: integer 
        time:
          type: string
        stadium:
          type: string
          
    UserData:
      properties:
        id:
          type: integer
        name:
          type: string
      # Both properties are required
      required:  
        - id
        - name